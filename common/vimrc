set nocompatible              " be iMproved, required

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source ~/.vimrc
endif

let vim_plugin_tmp_dir=$HOME."/.tmp/vim/plugged"

call plug#begin(vim_plugin_tmp_dir)

" Themes / Color Schemes
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'flazz/vim-colorschemes'

" Typescript syntax highlighting and other settings.
Plug 'leafgarland/typescript-vim'

" Cursorline highlighter
Plug 'miyakogi/conoline.vim'

" File Explorer
Plug 'scrooloose/nerdtree'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'

" Super Editing
Plug 'editorconfig/editorconfig-vim'
Plug 'junegunn/vim-easy-align'
"Plug 'godlygeek/tabular'
Plug 'tpope/vim-surround'
Plug 'kana/vim-textobj-user'
Plug 'glts/vim-textobj-comment'
Plug 'tpope/vim-commentary'

" Git plugins
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'juneedahamed/svnj.vim'

" AutoComplete / Syntax Checking / Code Navigation
Plug 'Valloric/YouCompleteMe'
Plug 'scrooloose/syntastic'
Plug 'majutsushi/tagbar'

Plug 'wikitopian/hardmode'
Plug 'takac/vim-hardtime'

Plug 'easymotion/vim-easymotion'
Plug 'dietsche/vim-lastplace'

" Zoom in/out current window
Plug 'szw/vim-maximizer'

call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""

set timeoutlen=1000
set laststatus=2
if !has('nvim')
    set encoding=utf-8
endif
set t_Co=256

if has("gui_running")
    set guioptions-=T " no toolbar
    set lines=60 columns=180 linespace=0
    let s:uname = system("uname")
    if s:uname == "Darwin\n"
        set guifont=Inconsolata\ for\ Powerline:h13
    elseif s:uname == "Linux\n"
        set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
    else
        set guifont=Powerline\ Consolas\ 13
    endif
endif

set background=dark
" colorscheme jellybeans
silent! colorscheme gruvbox

" mark just the first character going out of the specified column
"highlight ColorColumn ctermbg=magenta
set colorcolumn=80

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-airline settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" let g:airline_theme='jellybeans'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Conoline settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:conoline_auto_enable = 1
let g:conoline_use_colorscheme_default_normal=1
let g:conoline_use_colorscheme_default_insert=1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ctrlp settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
set wildignore+=*.o,*.os,*.a,*.so,*.pyc,*/.git/*,*/.svn/*
set wildignore+=*.o,*.os,*.a,*.so,*.pyc,*\\.git\\*,*\\.svn\\*

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" YouCompleteMe settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <leader>jd :YcmCompleter GoTo<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Syntastic settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

let g:syntastic_html_tidy_blocklevel_tags=["ion-nav-view", "ion-content", "ion-pane",
            \ "ion-header-bar", "ion-list", "ion-item",
            \ "webview"]
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" old vimrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""

set hlsearch

" syntax on
set autoindent
set nowrap

set noshowmode
set showmatch

set tabstop=4
set shiftwidth=4
set expandtab
silent! retab

set relativenumber
set number

" toggle invisible characters
set invlist
set listchars=tab:▸\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
highlight SpecialKey ctermbg=none " make the highlighting of tabs less annoying
set showbreak=↪
nmap <leader>l :set list!<cr>

set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp,.
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp,.
set undodir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp,.

" in makefiles, don't expand tabs to spaces, since actual tab characters are
" needed, and have indentation at 8 chars to be sure that all indents are tabs
" (despite the mappings later):
autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0


"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Compatibility between vim and nvim
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
if !has('nvim')
    set ttymouse=xterm2
endif
set mouse=a

" use ESC to exit terminal mode.
if exists(':tnoremap')
    tnoremap <Esc> <C-\><C-n>
endif
